project('bimg', 'cpp', version : '1.0.0', license: 'BSD 2-Clause', default_options : ['cpp_std=c++14'])

includes = [
	include_directories('./include'),
	include_directories('./3rdparty'),
	include_directories('./3rdparty/astc-codec'),
	include_directories('./3rdparty/astc-codec/include'),
	include_directories('./3rdparty/nvtt'),
	include_directories('./3rdparty/iqa/include'),
]

src = [
  '3rdparty/astc/astc_averages_and_directions.cpp',
  '3rdparty/astc/astc_block_sizes2.cpp',
  '3rdparty/astc/astc_color_quantize.cpp',
  '3rdparty/astc/astc_color_unquantize.cpp',
  '3rdparty/astc/astc_compress_symbolic.cpp',
  '3rdparty/astc/astc_compute_variance.cpp',
  '3rdparty/astc/astc_decompress_symbolic.cpp',
  '3rdparty/astc/astc_encoding_choice_error.cpp',
  '3rdparty/astc/astc_find_best_partitioning.cpp',
  '3rdparty/astc/astc_ideal_endpoints_and_weights.cpp',
  '3rdparty/astc/astc_imageblock.cpp',
  '3rdparty/astc/astc_integer_sequence.cpp',
  '3rdparty/astc/astc_kmeans_partitioning.cpp',
  '3rdparty/astc/astc_lib.cpp',
  '3rdparty/astc/astc_partition_tables.cpp',
  '3rdparty/astc/astc_percentile_tables.cpp',
  '3rdparty/astc/astc_pick_best_endpoint_format.cpp',
  '3rdparty/astc/astc_quantization.cpp',
  '3rdparty/astc/astc_symbolic_physical.cpp',
  '3rdparty/astc/astc_weight_align.cpp',
  '3rdparty/astc/astc_weight_quant_xfer_tables.cpp',
  '3rdparty/astc/mathlib.cpp',
  '3rdparty/astc/softfloat.cpp',
  '3rdparty/astc-codec/src/decoder/astc_file.cc',
  '3rdparty/astc-codec/src/decoder/codec.cc',
  '3rdparty/astc-codec/src/decoder/endpoint_codec.cc',
  '3rdparty/astc-codec/src/decoder/footprint.cc',
  '3rdparty/astc-codec/src/decoder/integer_sequence_codec.cc',
  '3rdparty/astc-codec/src/decoder/intermediate_astc_block.cc',
  '3rdparty/astc-codec/src/decoder/logical_astc_block.cc',
  '3rdparty/astc-codec/src/decoder/partition.cc',
  '3rdparty/astc-codec/src/decoder/physical_astc_block.cc',
  '3rdparty/astc-codec/src/decoder/quantization.cc',
  '3rdparty/astc-codec/src/decoder/weight_infill.cc',
  '3rdparty/edtaa3/edtaa3func.cpp',
  '3rdparty/etc1/etc1.cpp',
  '3rdparty/etc2/ProcessRGB.cpp',
  '3rdparty/etc2/Tables.cpp',
  '3rdparty/libsquish/alpha.cpp',
  '3rdparty/libsquish/clusterfit.cpp',
  '3rdparty/libsquish/colourblock.cpp',
  '3rdparty/libsquish/colourfit.cpp',
  '3rdparty/libsquish/colourset.cpp',
  '3rdparty/libsquish/maths.cpp',
  '3rdparty/libsquish/rangefit.cpp',
  '3rdparty/libsquish/singlecolourfit.cpp',
  '3rdparty/libsquish/squish.cpp',
  '3rdparty/lodepng/lodepng.cpp',
  '3rdparty/nvtt/bc6h/zoh.cpp',
  '3rdparty/nvtt/bc6h/zoh_utils.cpp',
  '3rdparty/nvtt/bc6h/zohone.cpp',
  '3rdparty/nvtt/bc6h/zohtwo.cpp',
  '3rdparty/nvtt/bc7/avpcl.cpp',
  '3rdparty/nvtt/bc7/avpcl_mode0.cpp',
  '3rdparty/nvtt/bc7/avpcl_mode1.cpp',
  '3rdparty/nvtt/bc7/avpcl_mode2.cpp',
  '3rdparty/nvtt/bc7/avpcl_mode3.cpp',
  '3rdparty/nvtt/bc7/avpcl_mode4.cpp',
  '3rdparty/nvtt/bc7/avpcl_mode5.cpp',
  '3rdparty/nvtt/bc7/avpcl_mode6.cpp',
  '3rdparty/nvtt/bc7/avpcl_mode7.cpp',
  '3rdparty/nvtt/bc7/avpcl_utils.cpp',
  '3rdparty/nvtt/nvmath/fitting.cpp',
  '3rdparty/nvtt/nvtt.cpp',
  '3rdparty/pvrtc/BitScale.cpp',
  '3rdparty/pvrtc/MortonTable.cpp',
  '3rdparty/pvrtc/PvrTcDecoder.cpp',
  '3rdparty/pvrtc/PvrTcEncoder.cpp',
  '3rdparty/pvrtc/PvrTcPacket.cpp',
  '3rdparty/iqa/source/convolve.c',
  '3rdparty/iqa/source/decimate.c',
  '3rdparty/iqa/source/math_utils.c',
  '3rdparty/iqa/source/ms_ssim.c',
  '3rdparty/iqa/source/mse.c',
  '3rdparty/iqa/source/psnr.c',
  '3rdparty/iqa/source/ssim.c',

  'src/image.cpp',
  'src/image_cubemap_filter.cpp',
  'src/image_decode.cpp',
  'src/image_encode.cpp',
  'src/image_gnf.cpp',
]

bx_dep = dependency('bx', fallback: ['bx', 'bx_dep'])

lib = static_library(
  'libbimg',
  src,
  include_directories : includes,
  dependencies        : bx_dep
)

bimg_dep = declare_dependency(include_directories : includes, link_with: lib)